{"version":3,"sources":["components/layout/Layout.tsx","components/data-table/service/api.ts","components/data-table/components/link/Link.tsx","components/data-table/components/image/Image.tsx","components/data-table/components/tick/Tick.tsx","components/data-table/components/read-more/ReadMore.tsx","components/data-table/components/index.tsx","components/data-table/DataTable.tsx","components/data-table/service/helpers.ts","components/main-content/MainContent.tsx","router/AppRouter.tsx","App.tsx"],"names":["Layout","pages","children","className","map","page","key","path","to","activeClassName","linkTitle","displayName","getData","url","a","axios","get","resp","data","Link","value","type","link","href","target","rel","Image","src","alt","Tick","ReadMore","length","useState","isFull","toggle","defaultLength","slice","onClick","Components","props","email","phone","image","tick","readMore","DefaultComp","DataTable","tableData","apiEndpoint","columns","isLoading","setLoading","setData","useEffect","response","console","error","fetchData","column","title","item","index","cells","elem","element","mapData","cell","ind","Component","Spinner","MainContent","pageInfo","pageTitle","pageDescription","table","AppRouter","renderRoutes","render","exact","this","fallback","size","style","top","left","React","App"],"mappings":"iNASMA,EAAS,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SACpB,OACI,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,qBACTF,EAAMG,KAAI,SAACC,GACR,OACI,wBAAIF,UAAU,WAAWG,IAAKD,EAAKE,MAC/B,kBAAC,IAAD,CACIC,GAAIH,EAAKE,KACTJ,UAAW,WACXM,gBAAiB,UAChBJ,EAAKK,iBAO9B,yBAAKP,UAAU,QACVD,KAMjBF,EAAOW,YAAc,WAENX,Q,+CCnCFY,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACAC,IAAMC,IAAIH,GADV,cACbI,EADa,yBAGZA,EAAKC,MAHO,2CAAH,sDCKdC,EAAO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KACfC,EAAOF,EAQX,MANa,UAATC,EACAC,EAAI,iBAAaF,GACD,UAATC,IACPC,EAAI,cAAUF,IAId,uBAAGG,KAAMD,EAAME,OAAO,SAASC,IAAI,uBAC9BL,IAKbD,EAAKR,YAAc,OAEJQ,QCnBTO,EAAQ,SAAC,GAAsB,IAApBN,EAAmB,EAAnBA,MACb,OACI,yBAAKO,IAAKP,EAAOQ,IAAI,YAAYzB,UAAU,2BAInDuB,EAAMf,YAAc,QAELe,QCRTG,EAAO,SAAC,GAAsB,IAApBT,EAAmB,EAAnBA,MACZ,OACI,6BACKA,EACK,uBAAGjB,UAAU,0CACb,uBAAGA,UAAU,8CAM/B0B,EAAKlB,YAAc,OAEJkB,QCZTC,EAAW,SAAC,GAA4B,IAA3BV,EAA0B,EAA1BA,MAAOW,EAAmB,EAAnBA,OAAmB,EAChBC,oBAAS,GADO,mBAClCC,EADkC,KAC1BC,EAD0B,KAEnCC,EAAgBJ,GAAU,GAGhC,OAAII,EAFgBf,EAAMW,OAGd,6BAAMX,GAId,6BACKa,EAASb,EAAQA,EAAMgB,MAAM,EAAGD,GAEjC,yBAAKhC,UAAU,cACX,4BAAQkC,QAAS,kBAAMH,GAAQD,IAAS9B,UAAU,gBAC7C8B,EAAS,WAAa,eAO3CH,EAASnB,YAAc,WAERmB,ICrBTQ,EAAkB,CACpBhB,KAAM,SAACiB,GAAD,OAAkB,kBAAC,EAASA,IAClCC,MAAO,SAACD,GAAD,OAAkB,kBAAC,EAAD,iBAAUA,EAAV,CAAiBlB,KAAM,YAChDoB,MAAO,SAACF,GAAD,OAAkB,kBAAC,EAAD,iBAAUA,EAAV,CAAiBlB,KAAM,YAChDqB,MAAOhB,EACPiB,KAAMd,EACNe,SDeWd,GCZTe,EAAc,SAAC,GAAD,IAAEzB,EAAF,EAAEA,MAAF,OAAqB,6BAAMA,ICRzC0B,EAAY,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,UACTC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,QADkB,EAENjB,oBAAS,GAFH,mBAE/BkB,EAF+B,KAEpBC,EAFoB,OAGdnB,mBAAS,IAHK,mBAG/Bd,EAH+B,KAGzBkC,EAHyB,KAwBtC,OAlBAC,qBAAU,YACS,uCAAG,4BAAAvC,EAAA,sEAEVqC,GAAW,GAFD,SAIavC,EAAQoC,GAJrB,OAIJM,EAJI,OAMVF,EAAQE,GACRH,GAAW,GAPD,gDASVA,GAAW,GACXI,QAAQC,MAAR,MAVU,yDAAH,qDAcfC,KACD,CAACT,IAEI,yBAAK7C,UAAU,QACnB,yBAAKA,UAAU,aACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,cACjB,4BACK8C,EAAQ7C,KAAI,SAACsD,GACV,OAAQ,wBAAIpD,IAAKoD,EAAOpD,KAAMoD,EAAOC,YAK7C,+BACCzC,EAAKd,KAAI,SAACwD,EAAWC,GAClB,IAAMC,ECzCH,SAACb,EAA4BW,GAChD,OAAOX,EAAQ7C,KAAI,SAACsD,GAChB,MAAO,CACHtC,MAAOwC,EAAKF,EAAOpD,KACnByD,KAAML,EAAOM,YDqCSC,CAAQhB,EAASW,GAE/B,OAAQ,wBAAItD,IAAKuD,GACXC,EAAM1D,KAAI,SAAC8D,EAAkBC,GAC3B,ID/BZH,EC+BkBI,GD/BlBJ,EC+B2CE,EAAKH,MAAQ,GD9B7DzB,EAAW0B,IAAYnB,GCgCN,OAAQ,wBAAIvC,IAAK6D,GAAK,kBAACC,EAAD,CAAWhD,MAAO8C,EAAK9C,kBAO3D8B,GAAY,yBAAK/C,UAAU,qCAAf,IAAoD,kBAACkE,EAAA,EAAD,MAApD,QAK1BvB,EAAUnC,YAAc,YAETmC,QE5DTwB,EAAc,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAClB,OAAQ,yBAAKpE,UAAU,mBACnB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aACToE,EAASC,WAGd,uBAAGrE,UAAU,QACRoE,EAASE,kBAIlB,yBAAKtE,UAAU,QACX,kBAAC,EAAD,CAAW4C,UAAWwB,EAASG,WAK3CJ,EAAY3D,YAAc,cAEX2D,QCjBTK,E,4MAGFC,aAAe,WAGX,OAFgB,EAAKrC,MAAdtC,MAEMG,KAAI,SAACC,GACd,OACI,kBAAC,IAAD,CACIC,IAAKD,EAAKE,KACVA,KAAMF,EAAKE,KACXsE,OAAQ,SAACtC,GAAD,OAAkC,kBAAC,EAAD,iBAAiBA,EAAjB,CAAyBgC,SAAUlE,MAC7EyE,OAAK,Q,uDAOX,IACE7E,EAAU8E,KAAKxC,MAAftC,MAER,OACI,kBAAC,EAAD,CAAQA,MAAOA,GACX,kBAAC,WAAD,CACI+E,SAAU,kBAACX,EAAA,EAAD,CAASlE,UAAU,oBACV8E,KAAM,EACNC,MAAO,CAACC,IAAK,MAAOC,KAAM,UAC7C,6BACKL,KAAKH,eACN,kBAAC,IAAD,CAAUtE,IAAK,UAAWE,GAAIP,EAAM,GAAGM,c,GA9BvC8E,IAAMjB,WAAxBO,EACKhE,YAAsB,YAoClBgE,QC/BAW,UARf,YAAgC,IAAjBrF,EAAgB,EAAhBA,MACb,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAWA,MAAOA","file":"static/js/4.1bfcad37.chunk.js","sourcesContent":["import React from 'react';\nimport {PageType} from \"../../types/page\";\nimport {NavLink} from \"react-router-dom\";\n\ntype Props = {\n    pages: Array<PageType>\n    children: React.ReactNode,\n}\n\nconst Layout = ({pages, children}: Props) => {\n    return (\n        <div className='bg-light vh-100'>\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n                <ul className=\"m-auto navbar-nav\">\n                    {pages.map((page: PageType) => {\n                        return (\n                            <li className=\"nav-item\" key={page.path}>\n                                <NavLink\n                                    to={page.path}\n                                    className={'nav-link'}\n                                    activeClassName={'active'}>\n                                    {page.linkTitle}\n                                </NavLink>\n                            </li>)\n                    })}\n                </ul>\n            </nav>\n\n            <div className='mt-4'>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nLayout.displayName = 'GnLayout';\n\nexport default Layout;\n","import axios from 'axios';\n\nexport const getData = async (url: string) => {\n    const resp = await axios.get(url)\n\n    return resp.data;\n};\n","import React from 'react';\n\ntype Props = {\n    value: string,\n    type?: 'email' | 'phone'\n}\n\nconst Link = ({ value, type}: Props) => {\n    let link = value;\n\n    if (type === 'email') {\n        link = `mailto:${value}`;\n    } else if (type === 'phone') {\n        link = `tel:${value}`;\n    }\n\n    return (\n        <a href={link} target='_blank' rel=\"noopener noreferrer\">\n            {value}\n        </a>\n    );\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n","import React from 'react';\n\ntype Props = {\n    value: string,\n}\n\nconst Image = ({ value }: Props) => {\n    return (\n        <img src={value} alt=\"thumbnail\" className=\"rounded img-thumbnail\" />\n    );\n};\n\nImage.displayName = 'Image';\n\nexport default Image;\n","import React from 'react';\n\ntype Props = {\n    value: boolean,\n}\n\nconst Tick = ({ value }: Props) => {\n    return (\n        <div>\n            {value\n                ? <i className='fa fa-2x fa-check-circle text-success'/>\n                : <i className='fa fa-2x fa-minus-circle text-secondary'/>\n            }\n        </div>\n    );\n};\n\nTick.displayName = 'Tick';\n\nexport default Tick;\n","import React, {useState} from 'react';\n\ntype Props = {\n    value: string,\n    length?: number\n}\n\nconst ReadMore = ({value, length}: Props) => {\n    const [isFull, toggle] = useState(false);\n    const defaultLength = length || 50;\n    const valueLength = value.length;\n\n    if (defaultLength > valueLength) {\n        return (<div>{value}</div>)\n    }\n\n    return (\n        <div>\n            {isFull ? value : value.slice(0, defaultLength)}\n\n            <div className='text-right'>\n                <button onClick={() => toggle(!isFull)} className='btn btn-link'>\n                    {isFull ? 'See less' : 'See more'}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nReadMore.displayName = 'ReadMore';\n\nexport default ReadMore;\n","import React from 'react'\nimport Link from \"./link/Link\";\nimport Image from \"./image/Image\";\nimport Tick from \"./tick/Tick\";\nimport ReadMore from \"./read-more/ReadMore\";\n\ntype Props = {\n    value: string\n}\n\nconst Components: any = {\n    link: (props: Props) => <Link {...props}  />,\n    email: (props: Props) => <Link {...props} type={'email'}/>,\n    phone: (props: Props) => <Link {...props} type={'phone'}/>,\n    image: Image,\n    tick: Tick,\n    readMore: ReadMore\n};\n\nconst DefaultComp = ({value}: Props) => (<div>{value}</div>);\n\nexport default (element: string) => {\n    return Components[element] || DefaultComp;\n}\n","import React, {useState, useEffect} from 'react'\nimport {getData} from \"./service/api\";\nimport {mapData, MappedItem} from \"./service/helpers\";\nimport getComponent from './components'\nimport Spinner from \"../spinner/Spinner\";\nimport {TableType, ColumnType} from \"../../types/page\";\n\ntype Props = {\n    tableData: TableType\n}\n\nconst DataTable = ({tableData}: Props) => {\n    const {apiEndpoint, columns} = tableData;\n    const [isLoading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n\n                const response = await getData(apiEndpoint);\n\n                setData(response);\n                setLoading(false);\n            } catch (e) {\n                setLoading(false);\n                console.error(e)\n            }\n        };\n\n        fetchData();\n    }, [apiEndpoint]);\n\n    return (<div className='card'>\n        <div className='card-body'>\n            <table className='table'>\n                <thead className='thead-dark'>\n                <tr>\n                    {columns.map((column: ColumnType) => {\n                        return (<th key={column.key}>{column.title}</th>);\n                    })}\n                </tr>\n                </thead>\n\n                <tbody>\n                {data.map((item: any, index: number) => {\n                    const cells = mapData(columns, item);\n\n                    return (<tr key={index}>\n                        { cells.map((cell: MappedItem, ind: number) => {\n                            const Component = getComponent(cell.elem || '');\n\n                            return (<td key={ind}><Component value={cell.value} /></td>)\n                        })}\n                    </tr>);\n                })}\n                </tbody>\n\n            </table>\n            { isLoading &&<div className='d-flex justify-content-center p-5'> <Spinner/> </div> }\n        </div>\n    </div>);\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import { ColumnType } from \"../../../types/page\";\n\nexport type MappedItem = {\n    value: string | number,\n    elem?: string\n}\n\nexport const mapData = (columns: Array<ColumnType>, item: any): Array<MappedItem> => {\n    return columns.map((column: ColumnType) => {\n        return {\n            value: item[column.key],\n            elem: column.element\n        }\n    })\n};\n","import React from \"react\";\nimport DataTable from \"../data-table/DataTable\";\nimport {PageType} from \"../../types/page\";\n\ntype Props = {\n    pageInfo: PageType\n}\n\nconst MainContent = ({pageInfo}: Props) => {\n    return (<div className='container h-100'>\n        <div className='jumbotron'>\n            <h1 className='display-5'>\n                {pageInfo.pageTitle}\n            </h1>\n\n            <p className='lead'>\n                {pageInfo.pageDescription}\n            </p>\n        </div>\n        \n        <div className='mt-3'>\n            <DataTable tableData={pageInfo.table} />\n        </div>\n    </div>)\n};\n\nMainContent.displayName = 'MainContent';\n\nexport default MainContent;\n","import React, {Suspense} from 'react';\nimport Spinner from \"../components/spinner/Spinner\";\nimport {Route, Redirect, RouteComponentProps} from 'react-router-dom';\nimport {PageType} from \"../types/page\";\nimport Layout from \"../components/layout/Layout\";\nimport MainContent from \"../components/main-content/MainContent\";\n\ntype Props = {\n    pages: Array<PageType>\n}\n\nclass AppRouter extends React.Component<Props> {\n    static displayName: string = 'AppRouter';\n\n    renderRoutes = () => {\n        const {pages} = this.props;\n\n        return pages.map((page: PageType) => {\n            return (\n                <Route\n                    key={page.path}\n                    path={page.path}\n                    render={(props: RouteComponentProps) =>  (<MainContent {...props}  pageInfo={page} />)}\n                    exact\n                />\n            );\n        })\n    };\n\n\n    render() {\n        const { pages } = this.props;\n\n        return (\n            <Layout pages={pages}>\n                <Suspense\n                    fallback={<Spinner className='position-absolute'\n                                       size={3}\n                                       style={{top: '50%', left: '45%'}}/>}>\n                    <div>\n                        {this.renderRoutes()}\n                        <Redirect key={'default'} to={pages[0].path}/>\n                    </div>\n                </Suspense>\n            </Layout>);\n    }\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PageType } from \"./types/page\";\nimport AppRouter from './router/AppRouter';\n\ntype Props = {\n  pages: Array<PageType>\n}\n\nfunction App({ pages }: Props) {\n  return (\n    <BrowserRouter>\n      <AppRouter pages={pages}/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}